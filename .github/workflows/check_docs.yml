name: Pull Request Docs Check

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3
      uses: actions/setup-python@v2
      with:
        python-version: 3
    - name: Set up Python virtual environment
      run: |
        # Create a virtualenv
        python -m venv python${{ matrix.python-version }}-venv
        # Activate virtualenv
        source python${{ matrix.python-version }}-venv/bin/activate
    - name: Install controller
      run: |
        # Activate virtualenv
        #source python${{ matrix.python-version }}-venv/bin/activate
        sudo apt-get install graphviz libgraphviz-dev
        python -m pip install --upgrade pip
        pip install setuptools wheel
        cd db_update
        python setup.py install
        cd ../control_plane/protos
        python setup.py install
        cd ../../control_plane/controller
        python setup.py install
        cd ../../
    - name: Install node manager
      run: |
        # Activate virtualenv
        #source python${{ matrix.python-version }}-venv/bin/activate
        python -m pip install --upgrade pip
        pip install setuptools wheel
        cd control_plane/protos
        python setup.py install
        cd ../../control_plane/node-manager
        python setup.py install
    #- name: Build docs
    #  run: |
    #    # Activate virtualenv
    #    source python${{ matrix.python-version }}-venv/bin/activate
    #    # Build docs
    #    cd docs
    #    # Installs sphinx dependencies
    #    pip install sphinx
    #    pip install -r requirements.txt
    #    make html
        
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs"
        pre-build-command: "pip install sphinx"
        #build-command: "python -m sphinx -b html . _build"


    # Standard drop-in approach that should work for most people.
    #- uses: ammaraskar/sphinx-action@master
    #  with:
    #    pre-build-command: "pip install sphinx"
    #    # build-command: "python -m sphinx"
    #    docs-folder: "docs/"
    # Example of using a custom build-command.
    #- uses: ammaraskar/sphinx-action@master
    #  with:
    #    build-command: "sphinx-build -b html . _build"
    #    docs-folder: "docs2/"
    # Grabbing custom dependencies and building as a pdf.
    #- uses: ammaraskar/sphinx-action@master
    #  with:
    #    pre-build-command: "apt-get update -y && apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended"
    #    build-command: "make latexpdf"
    #    docs-folder: "docs2/"
    # Great extra actions to compose with:
    # Create an artifact of the html output.
    #- uses: actions/upload-artifact@v1
    #  with:
    #    name: DocumentationHTML
    #    path: docs/_build/html/
    # Create an artifact out of the previously built pdf.
    #- uses: actions/upload-artifact@v1
    #  with:
    #    name: Documentation
    #    path: docs2/_build/latex/pdfexample.pdf
